package space;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class EX3 {
	public static Connection getConn() throws SQLException {
		try {
			String url = "jdbc:oracle:thin:@localhost:1521:XE";
			String id = "HR";
			String pw = "1234";
			return DriverManager.getConnection(url, id, pw);
		} catch (SQLException e) {
			throw e;
		}
	}
	public static void main(String[] args) {
		try (Connection conn = getConn()){
			Class.forName("oracle.jdbc.driver.OracleDriver");
			// PreparedStatement의 기능
			// - PlaceHolder를 배치하기
			// - SQL쿼리문에서 값의 자리에만 배치할 수 있음
			// - "SQL Injection" 공격을 예방하는 구조를 가지고 있음
			Scanner sc = new Scanner(System.in);
			String query = "SELECT * FROM countries WHERE region_id = ";
			PreparedStatement psmt = conn.prepareStatement(query);
			ResultSet rs = psmt.executeQuery();
			while (rs.next()) {
				System.out.printf("%s %s %d\n",
						rs.getString("country_id"),
						rs.getString("country_name"),
						rs.getInt("region_id"));
			}
		} catch (ClassNotFoundException e) {
			System.out.println(e);
		} catch (SQLException e) {
			System.out.println(e);
		}
	}
}
