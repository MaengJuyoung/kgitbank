package runSpace;

import java.io.FileInputStream;
import java.io.FileOutputStream;

class CopyThread implements Runnable {
	private String fileName;
	public CopyThread(String fileName) {
		this.fileName = fileName;
	}
	public void run() {
		try {
			FileInputStream fis = new FileInputStream("file.pdf");
			FileOutputStream fos = new FileOutputStream(fileName);
			while (true) {
				int data = fis.read();
				if (data != -1) fos.write((byte)data);
				else break;
			}
			fis.close();
			fos.close();
		} catch(Exception e) {
			System.out.println(e);
		}
	}
}

public class EX3 {
	// 코드의 첫시작을 담당하는 항상 존재하는 쓰레드가 있음
	// -> main 쓰레드
	public static void main(String[] args) {
		// 1) 쓰레드를 쓰더라도 순서는 지켜줘야 함
		// 2) 동시 작업시에는 서로 영향을 주고 받는지를 점검해야 함
		Thread[] tArr = new Thread[8];
		for (int i = 0; i < tArr.length; i += 1) {
			tArr[i] =  new Thread(new CopyThread("file" + i +".pdf"));
		}
		for (int i = 0; i < tArr.length;)
		// join() 메서드 - 해당 쓰레드가 생성되고, 실행된 곳에 "합류"를 지시함
		System.out.println("파일 복사 완료~!");
	}
}
